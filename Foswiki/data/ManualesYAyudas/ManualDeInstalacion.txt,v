head	1.1;
access;
symbols;
locks; strict;
comment	@# @;
expand	@o@;


1.1
date	2010.11.16.05.17.51;	author BaseUserMapping_333;	state Exp;
branches;
next	;


desc
@none
@


1.1
log
@save topic
@
text
@%META:TOPICINFO{author="BaseUserMapping_333" comment="" date="1289884671" format="1.1" version="1"}%
%META:TOPICPARENT{name="WebHome"}%

---++ Fuentes de Foswiki

   * Foswiki se puede descargar de:
      * http://foswiki.org/Download/DownloadFoswiki
      * La versión instalada es Foswiki-1.1.
   * La versión de foswiki con los desarrollos se debe solicitar a Hexa, sin embargo. se entrega un ZIP con toda la aplicación.

---++ Ambiente

   * Se ingresa al servidor 190.109.184.33 para realizar el despliegue de foswiki
   * Dependencias existentes
      * Apache2
      * perl-v5.8.8
   * Dependencias instaladas:
      * RCS
<verbatim>
 yum install rcs
</verbatim>
      * GCC
<verbatim>
 yum install gcc
</verbatim>
      * HTMLDOC  
         * Se descarga el RMP http://packages.sw.be/htmldoc/htmldoc-1.8.27-2.el5.rf.i386.rpm
         * Se instala
<verbatim>
wget http://packages.sw.be/htmldoc/htmldoc-1.8.27-2.el5.rf.i386.rpm
rpm -i htmldoc-1.8.27-2.el5.rf.i386.rpm
</verbatim>
      * GIT
<verbatim>
wget http://kernel.org/pub/software/scm/git/git-1.7.3.tar.gz
tar xzvf git-1.7.3.tar.gz
cd git-1.7.3
./configure
</verbatim>
   * Dependencias de perl:
      * HTTP
<verbatim>
$ cpan
cpan> install HTML::Entities
</verbatim>


---++ Archivos de foswiki

   * La aplicación se encuentra en la siguiente ruta:
      * /var/www/html/Hexawiki/Foswiki
   * La configuración de apache para foswiki se encuentra en y fue generada en http://foswiki.org/Support/ApacheConfigGenerator:
      * /etc/httpd/conf.d/foswikiFrigo
<verbatim>
# Autogenerated httpd.conf file for Foswiki.
# Generated at http://foswiki.org/Support/ApacheConfigGenerator?vhost=frigo.aws.hexasas.com;port=;dir=/var/www/html/Hexawiki/Foswiki;symlink=;pathurl=/;shorterurls=enabled;engine=CGI;fastcgimodule=fastcgi;apver=2;allowconf=;requireconf=;loginmanager=Template;htpath=;errordocument=UserRegistration;errorcustom=;phpinstalled=None;blockpubhtml=;blocktrashpub=;controlattach=on;blockspiders=;foswikiversion=1.0

# For Foswiki version 1.0


NameVirtualHost *:80


<VirtualHost *:80>
    ServerAdmin webmaster@@frigo.aws.hexasas.com
    DocumentRoot /var/www/html/Hexawiki/Foswiki
    ServerName sgi.frigorificodelcauca.com


# The Alias defines a url that points to the root of the Foswiki installation.
# The first parameter will be part of the URL to your installation e.g.
# http://my.co.uk/foswiki/bin/view/...
# The second parameter must point to the physical path on your disc.

ScriptAlias /bin "/var/www/html/Hexawiki/Foswiki/bin"

# The following Alias is used to access files in the pub directory (attachments etc)
# It must come _after_ the ScriptAlias.  
# If short URLs are enabled, and any other local directories or files need to be accessed directly, they 
# must also be specified in an Alias statement, and must not conflict with a web name.  

Alias /pub "/var/www/html/Hexawiki/Foswiki/pub"
Alias /robots.txt "/var/www/html/Hexawiki/Foswiki/robots.txt"



#  Rewriting is required for Short URLs, and Attachment redirecting to viewfile
RewriteEngine    on
#RewriteLog "/var/log/apache/rewrite.log"  
#RewriteLogLevel 0   
 


# short urls
Alias / "/var/www/html/Hexawiki/Foswiki/bin/view/"
RewriteRule ^/+bin/+view/+(.*) /$1 [L,NE,R]
RewriteRule ^/+bin/+view$ / [L,NE,R]


#
# Dont rewrite any other /bin URLs
#
RewriteRule ^/bin/(.*)$ - [L,PT]                     #  bin, stop rewriting

#
# Dont rewrite internal requests or robots.txt
#
RewriteCond %{IS_SUBREQ} ^true$ [OR]
RewriteCond %{REQUEST_URI} ^/robots.txt$
RewriteRule .* - [L]

#
#  Protect attachments by rewriting to the "viewfile" script
#

#  Permit some safe exceptions to avoid viewfile overhead
#  Any gif/jpg/ico in /pub, and any files in /pub/System or any WebPreferences:
#  pass through unmodified
RewriteCond  %{REQUEST_URI} ^/pub/[^/]+\.(gif|jpe?g|ico|png)$  [NC,OR]
RewriteCond  %{REQUEST_URI} ^/pub/(System|Main)/(.*)$  [OR]
RewriteCond  %{REQUEST_URI} ^/pub/([^/]+/)+WebPreferences/([^/]+)$
RewriteRule  ^/pub/.* - [L,PT]



# Optional - do not rewrite /pub/images if ImageGalleryPlugin is installed - path is incompatible with viewfile
#RewriteRule ^/+pub/+images/+.*$ - [L,PT]

# If it makes it here, rewrite as viewfile
RewriteRule ^/+pub/+(.*)$  /bin/viewfile/$1 [L,PT]



# This enables access to the documents in the Foswiki root directory
<Directory "/var/www/html/Hexawiki/Foswiki">
    Order Allow,Deny
    Allow from all
    Deny from env=blockAccess
</Directory>



# This specifies the options on the Foswiki scripts directory. The ExecCGI
# and SetHandler tell apache that it contains scripts. "Allow from all"
# lets any IP address access this URL.
# Note:  If you use SELinux, you also have to "Allow httpd cgi support" in your SELinux policies

<Directory "/var/www/html/Hexawiki/Foswiki/bin">
    AllowOverride None
    Order Allow,Deny
    Allow from all
    Deny from env=blockAccess

    Options +ExecCGI  -FollowSymLinks
    SetHandler cgi-script

    # Password file for Foswiki users
    AuthUserFile /var/www/html/Hexawiki/Foswiki/data/.htpasswd
    AuthName 'Enter your WikiName: (First name and last name, no space, no dots, capitalized, e.g. JohnSmith). Cancel to register if you do not have one.'
    AuthType Basic

    # File to return on access control error (e.g. wrong password)
    ErrorDocument 401 /System/UserRegistration

    # Limit access to configure to specific IP address(es) or user(s).
    # Make sure configure is not open to the general public.
    # It exposes system details that can help attackers.
    # cf. http://foswiki.org/Support/ProtectingYourConfiguration for details.
    <FilesMatch "^(configure)$">
        SetHandler cgi-script
        
        Satisfy Any
        ErrorDocument 401 default
    </FilesMatch>

</Directory>

# This sets the options on the pub directory, which contains attachments and
# other files like CSS stylesheets and icons. AllowOverride None stops a
# user installing a .htaccess file that overrides these options.
# Note that files in pub are *not* protected by Foswiki Access Controls,
# so if you want to control access to files attached to topics you need to
# block access to the specific directories same way as the ApacheConfigGenerator
# blocks access to the pub directory of the Trash web
<Directory "/var/www/html/Hexawiki/Foswiki/pub">
    Options None
    Options -FollowSymLinks
    AllowOverride None
    Order Allow,Deny
    Allow from all
    Deny from env=blockAccess
    ErrorDocument 404 /bin/viewfile

    # This line will redefine the mime type for the most common types of scripts
    AddType text/plain .shtml .php .php3 .phtml .phtm .pl .py .cgi
   #
   #add an Expires header that is sufficiently in the future that the browser does not even ask if its uptodate
   # reducing the load on the server significantly
   #IF you can, you should enable this - it _will_ improve your Foswiki experience, even if you set it to under one day. 
   # you may need to enable expires_module in your main apache config
   #LoadModule expires_module libexec/httpd/mod_expires.so
   #AddModule mod_expires.c
   #<ifmodule mod_expires.c>
   #  <filesmatch "\.(jpg|gif|png|css|js)$">
   #       ExpiresActive on
   #       ExpiresDefault "access plus 11 days"
   #   </filesmatch>
   #</ifmodule>
   #
   # Serve pre-compressed versions of .js and .css files, if they exist
   # Some browsers do not handle this correctly, which is why it is disabled by default
   # <FilesMatch "\.(js|css)$">
   #         RewriteEngine on
   #         RewriteCond %{HTTP:Accept-encoding} gzip
   #         RewriteCond %{REQUEST_FILENAME}.gz -f
   #         RewriteRule ^(.*)$ %{REQUEST_URI}.gz [L,QSA]
   # </FilesMatch>
   # <FilesMatch "\.(js|css)\?.*$">
   #         RewriteEngine on
   #         RewriteCond %{HTTP:Accept-encoding} gzip
   #         RewriteCond %{REQUEST_FILENAME}.gz -f
   #         RewriteRule ^([^?]*)\?(.*)$ $1.gz?$2 [L]
   # </FilesMatch>
   # <FilesMatch "\.js\.gz(\?.*)?$">
   #         AddEncoding x-gzip .gz
   #         AddType application/x-javascript .gz
   # </FilesMatch>
   # <FilesMatch "\.css\.gz(\?.*)?$">
   #         AddEncoding x-gzip .gz
   #         AddType text/css .gz
   # </FilesMatch>


</Directory>

# Security note: All other directories should be set so
# that they are *not* visible as URLs, so we set them as =deny from all=.
<Directory "/var/www/html/Hexawiki/Foswiki/data">
    deny from all
</Directory>

<Directory "/var/www/html/Hexawiki/Foswiki/templates">
    deny from all
</Directory>

<Directory "/var/www/html/Hexawiki/Foswiki/lib">
    deny from all
</Directory>

<Directory "/var/www/html/Hexawiki/Foswiki/locale">
    deny from all
</Directory>

<Directory "/var/www/html/Hexawiki/Foswiki/tools">
    deny from all
</Directory>

<Directory "/var/www/html/Hexawiki/Foswiki/working">
    deny from all
</Directory>

# We set an environment variable called blockAccess.
#
# Setting a BrowserMatchNoCase to ^$ is important. It prevents Foswiki from
# including its own topics as URLs and also prevents other Foswikis from
# doing the same. This is important to prevent the most obvious
# Denial of Service attacks.
#
# You can expand this by adding more BrowserMatchNoCase statements to
# block evil browser agents trying to crawl your Foswiki
#
# Example:
# BrowserMatchNoCase ^SiteSucker blockAccess
# BrowserMatchNoCase ^$ blockAccess



BrowserMatchNoCase ^$ blockAccess


</VirtualHost>
</verbatim>

   * Se debe modificar el archivo de configuración de apache _/etc/httpd/conf/httpd.conf_ agregando la siguiente linea al final:
<verbatim>
Include conf.d/foswikiFrigo
</verbatim>
   * El usuario para de los archivos de foswiki debe ser *apache* y el grupo *apache* para esto:
<verbatim>
$ chown -R apache:apache /var/www/html/Hexawiki/Foswiki/
</verbatim>
   * Se debe reiniciar el servidor apache:
<verbatim>
$ /etc/init.d/httpd restart
</verbatim>


<!-- PDFSTOP -->


%META:REVCOMMENT{ncomments="0"}%
@
